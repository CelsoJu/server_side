{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Celso\\\\Desktop\\\\Project\\\\NextJS\\\\server_side\\\\pages\\\\index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport 'isomorphic-fetch';\n\nvar Home = function Home(_ref) {\n  var repositories = _ref.repositories;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, repositories.map(function (repo) {\n    return __jsx(\"h1\", {\n      key: repo.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }\n    }, repo.nome);\n  }));\n};\n\n_c = Home;\nHome.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response, repositories;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://api.github.com/orgs/rocketseat/repos\");\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.json();\n\n        case 5:\n          repositories = _context.sent;\n          return _context.abrupt(\"return\", {\n            repositories: repositories\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Celso/Desktop/Project/NextJS/server_side/pages/index.js"],"names":["React","Home","repositories","map","repo","id","nome","getInitialProps","fetch","response","json"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;;AAEA,IAAMC,IAAI,GAAI,SAARA,IAAQ;AAAA,MAAEC,YAAF,QAAEA,YAAF;AAAA,SACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,YAAY,CAACC,GAAb,CAAiB,UAAAC,IAAI;AAAA,WAClB;AAAI,MAAA,GAAG,EAAIA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBD,IAAI,CAACE,IAA1B,CADkB;AAAA,GAArB,CADL,CADU;AAAA,CAAd;;KAAML,I;AASNA,IAAI,CAACM,eAAL,yEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACIC,KAAK,CAAC,8CAAD,CADT;;AAAA;AACbC,UAAAA,QADa;AAAA;AAAA,iBAEQA,QAAQ,CAACC,IAAT,EAFR;;AAAA;AAEbR,UAAAA,YAFa;AAAA,2CAIb;AAACA,YAAAA,YAAY,EAAZA;AAAD,WAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAOA,eAAeD,IAAf","sourcesContent":["import React from 'react'\r\nimport 'isomorphic-fetch'\r\n\r\nconst Home =  ({repositories}) => (\r\n    <div>\r\n        {repositories.map(repo => \r\n            <h1 key = {repo.id}>{repo.nome}</h1>\r\n        )}\r\n    </div>\r\n)\r\n\r\n\r\nHome.getInitialProps = async () => {\r\n    const response = await fetch(\"https://api.github.com/orgs/rocketseat/repos\")\r\n    const repositories = await response.json();\r\n\r\n    return{repositories}\r\n}\r\n\r\nexport default Home\r\n    \r\n"]},"metadata":{},"sourceType":"module"}