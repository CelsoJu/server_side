{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Celso\\\\Desktop\\\\Project\\\\NextJS\\\\server_side\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport 'isomorphic-fetch';\n\nconst Home = ({\n  repositories\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }\n}, repositories.map(repo => __jsx(\"h1\", {\n  key: repo.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }\n}, repo.nome)));\n\nHome.getInitialProps = async () => {\n  const response = await fetch(\"https://api.github.com/orgs/rocketseat/repos\");\n  const repositories = await response.json();\n  console.log(repositories);\n  return {\n    repositories\n  };\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Celso/Desktop/Project/NextJS/server_side/pages/index.js"],"names":["React","Home","repositories","map","repo","id","nome","getInitialProps","response","fetch","json","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;;AAEA,MAAMC,IAAI,GAAI,CAAC;AAACC,EAAAA;AAAD,CAAD,KACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKA,YAAY,CAACC,GAAb,CAAiBC,IAAI,IAClB;AAAI,EAAA,GAAG,EAAIA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAqBD,IAAI,CAACE,IAA1B,CADH,CADL,CADJ;;AASAL,IAAI,CAACM,eAAL,GAAuB,YAAY;AAC/B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAAD,CAA5B;AACA,QAAMP,YAAY,GAAG,MAAMM,QAAQ,CAACE,IAAT,EAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AAEA,SAAM;AAACA,IAAAA;AAAD,GAAN;AACH,CAND;;AAQA,eAAeD,IAAf","sourcesContent":["import React from 'react'\r\nimport 'isomorphic-fetch'\r\n\r\nconst Home =  ({repositories}) => (\r\n    <div>\r\n        {repositories.map(repo => (\r\n            <h1 key = {repo.id}>{repo.nome}</h1>\r\n        ))}\r\n    </div>\r\n)\r\n\r\n\r\nHome.getInitialProps = async () => {\r\n    const response = await fetch(\"https://api.github.com/orgs/rocketseat/repos\")\r\n    const repositories = await response.json();\r\n    console.log(repositories)\r\n\r\n    return{repositories}\r\n}\r\n\r\nexport default Home\r\n    \r\n"]},"metadata":{},"sourceType":"module"}